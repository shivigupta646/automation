package framework;

import java.io.File;
import java.io.IOException;
import java.security.PublicKey;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Set;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.Select;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;
import com.google.common.io.Files;

import io.github.bonigarcia.wdm.WebDriverManager;

public class First2 {
	private WebDriver driver;  	
	private ExtentTest test;

	// generic method, wrapper method, application independent, util methods.
	

	public  void inputValue( String locatortype,String locatorValue, String inputValue) {
		
		WebElement we =getwebElement(locatortype , locatorValue);
		if (we.isDisplayed() == true) {
			System.out.println("webelement  is displayed");  
			test.log(Status.INFO, "webelement  is displayed");
			if (we.isEnabled() == true) {
				we.clear();
				we.sendKeys(inputValue);
				System.out.println(" element is enabled");
				test.log(Status.INFO, "element is enabled");
			} else { 
				System.out.println("Txt Box is not enabled");
				test.log(Status.INFO, "Txt Box is not enabled");
			}
		} else {
			System.out.println("WEbelement is not displayed ");
			test.log(Status.INFO, "WEbelement is not displayed");
		}
			
	
			
		
	}
    
	public  WebElement getwebElement( String locatortype, String locatorValue) {
		WebElement we =null;
		if(locatortype.equalsIgnoreCase("xpath")) {
			we=driver.findElement(By.xpath(locatorValue)); 
		}else if(locatortype.equalsIgnoreCase("id")) {
			we=driver.findElement(By.id(locatorValue));
		}else if(locatortype.equalsIgnoreCase("className")) {
		we=driver.findElement(By.className(locatorValue));
	    }else if(locatortype.equalsIgnoreCase("name")) {
	    we=driver.findElement(By.name(locatorValue));
	    }else if(locatortype.equalsIgnoreCase("tagName")) {
		    we=driver.findElement(By.tagName(locatorValue));
	    }else if(locatortype.equalsIgnoreCase("cssSelector")) {
		    we=driver.findElement(By.cssSelector(locatorValue));
	    }else if(locatortype.equalsIgnoreCase("linkText")) {
		    we=driver.findElement(By.linkText(locatorValue));
	    }else if(locatortype.equalsIgnoreCase("partialLinkTest")) {
		    we=driver.findElement(By.partialLinkText(locatorValue));
	    }else {
	    	test.log(Status.FAIL,locatortype+ "locator type is wrong. please check");		    
	    	}
		return we;
	}
	 
		public  void click(String locatortype, String locatorValue) {
			
			WebElement we =getwebElement(locatortype , locatorValue);
			if (we.isDisplayed() == true) {
				System.out.println("webelement  is displayed");  
				test.log(Status.INFO, "webelement  is displayed");
				if (we.isEnabled() == true) {
					
					we.click();
					System.out.println(" element is enabled");
					test.log(Status.INFO, "element is enabled");
				} else { 
					System.out.println("Txt Box is not enabled");
					test.log(Status.INFO, "Txt Box is not enabled");
				}
			} else {
				System.out.println("WEbelement is not displayed ");
				test.log(Status.INFO, "WEbelement is not displayed");
			}
				
		}

		public  String getTimeStamp() {
			DateFormat df= new SimpleDateFormat("mm-dd-yyyy HH_MM_SS") ;
			String x= df.format(new Date());
			return x;
			
					
}
    public  void Takesscreenshot(WebDriver driver)  {

		TakesScreenshot tstScreenshot = (TakesScreenshot) driver;
		File from=tstScreenshot.getScreenshotAs(OutputType.FILE);
			String ts=  getTimeStamp();
   File to = new File("C:\\Users\\vikshi\\OneDrive\\Desktop\\shivii\\vtigerAutomation\\target\\picture\\b   abc.png");
			
			try {
				FileUtils.copyFile(from, to);
			} catch (IOException e) {
				e.printStackTrace();
			
			} 
 }
 
	public  void OpenURL(String URL) {
		
		driver.get(URL);
		test.info("Browser has been lanuched  the URl is " + URL);
		
   
	}
	public  WebDriver openBroswer(String browser) {
		if(browser.equalsIgnoreCase("chrome")) {
			WebDriverManager.chromedriver().setup();
			driver = new ChromeDriver();
			test.log(Status.INFO,"Browser launch successfully");
		}else if(browser.equalsIgnoreCase("firefox")) {
		WebDriverManager.firefoxdriver().setup();
		driver = new FirefoxDriver();
		test.log(Status.INFO,"Browser launch successfully");
		
	}else if(browser.equalsIgnoreCase("edge")) {
	WebDriverManager.edgedriver().setup();
	driver = new EdgeDriver();
	test.log(Status.INFO,"Browser launch successfully");
	
}else {
	test.log(Status.INFO,"Browser not launched Browser name is not valid .please ");
}
		return driver;
		
		
	}
	public  void dragAndDrop ( String locatortype1, String locatorValue1,String locatortype2, String locatorValue2) {
		WebElement we1 =getwebElement(locatortype1 , locatorValue1);
		WebElement we2 =getwebElement(locatortype2 , locatorValue2);
		if (we1.isDisplayed() == true) {
			System.out.println("webelement  is displayed");  
			test.log(Status.INFO, "webelement  is displayed");
			if (we1.isEnabled() == true) {
				Actions act= new Actions(driver);
				act.dragAndDrop(we1, we2).build().perform();
				System.out.println(" element is enabled");
				test.log(Status.INFO, "element is enabled");
			} else { 
				System.out.println("Txt Box is not enabled");
				test.log(Status.INFO, "Txt Box is not enabled");
			}
		} else {
			System.out.println("WEbelement is not displayed ");
			test.log(Status.INFO, "WEbelement is not displayed");
		}
			
	}
	
	public  void dragAndDrop2 ( String locatortype1, String locatorValue1,String locatortype2, String locatorValue2) {
		WebElement we1 =getwebElement(locatortype1 , locatorValue1);
		WebElement we2 =getwebElement(locatortype2 , locatorValue2);
		if (we1.isDisplayed() == true) {
			System.out.println("webelement  is displayed");  
			test.log(Status.INFO, "webelement  is displayed");
			if (we1.isEnabled() == true) {
				Actions act= new Actions(driver);
				act.clickAndHold(we1).moveToElement(we2).release().build().perform();
				
				System.out.println(" element is enabled");
				test.log(Status.INFO, "element is enabled");
			} else { 
				System.out.println("Txt Box is not enabled");
				test.log(Status.INFO, "Txt Box is not enabled");
			}
		} else {
			System.out.println("WEbelement is not displayed ");
			test.log(Status.INFO, "WEbelement is not displayed");
		}
			
	}
	
	
	public  void mouseHover( String locatortype, String locatorValue) {
		WebElement we1 =getwebElement(locatortype , locatorValue);
		if (we1.isDisplayed() == true) {
			System.out.println("webelement  is displayed");  
			test.log(Status.INFO, "webelement  is displayed");
			if (we1.isEnabled() == true) {
				Actions act= new Actions(driver);
				act.moveToElement(we1).build().perform();
				System.out.println(" element is enabled");
				test.log(Status.INFO, "element is enabled");
			} else { 
				System.out.println("Txt Box is not enabled");
				test.log(Status.INFO, "Txt Box is not enabled");
			}
		} else {
			System.out.println("WEbelement is not displayed ");
			test.log(Status.INFO, "WEbelement is not displayed");
		}
		}
	
	public  void doubleClick( String locatortype, String locatorValue) {
		WebElement we1 =getwebElement(locatortype , locatorValue);
		if (we1.isDisplayed() == true) {
			System.out.println("webelement  is displayed");  
			test.log(Status.INFO, "webelement  is displayed");
			if (we1.isEnabled() == true) {
				Actions act= new Actions(driver);
				act.doubleClick(we1).build().perform();
				System.out.println(" element is enabled");
				test.log(Status.INFO, "element is enabled");
			} else { 
				System.out.println("Txt Box is not enabled");
				test.log(Status.INFO, "Txt Box is not enabled");
			}
		} else {
			System.out.println("WEbelement is not displayed ");
			test.log(Status.INFO, "WEbelement is not displayed");
		}
	}
	public  void ClickAndHold( String locatortype, String locatorValue) {
		WebElement we1 =getwebElement(locatortype , locatorValue);
		if (we1.isDisplayed() == true) {
			System.out.println("webelement  is displayed");  
			test.log(Status.INFO, "webelement  is displayed");
			if (we1.isEnabled() == true) {
				Actions act= new Actions(driver);
				act.clickAndHold(we1).build().perform();
				System.out.println(" element is enabled");
				test.log(Status.INFO, "element is enabled");
			} else { 
				System.out.println("Txt Box is not enabled");
				test.log(Status.INFO, "Txt Box is not enabled");
			}
		} else {
			System.out.println("WEbelement is not displayed ");
			test.log(Status.INFO, "WEbelement is not displayed");
		}
	}
	
	public  void actClick( String locatortype, String locatorValue) {
		WebElement we1 =getwebElement(locatortype , locatorValue);
		if (we1.isDisplayed() == true) {
			System.out.println("webelement  is displayed");  
			test.log(Status.INFO, "webelement  is displayed");
			if (we1.isEnabled() == true) {
				Actions act= new Actions(driver);
				act.click(we1).build().perform();
				System.out.println(" element is enabled");
				test.log(Status.INFO, "element is enabled");
			} else { 
				System.out.println("Txt Box is not enabled");
				test.log(Status.INFO, "Txt Box is not enabled");
			}
		} else {
			System.out.println("WEbelement is not displayed ");
			test.log(Status.INFO, "WEbelement is not displayed");
		}
	}
	
	public  void actSendkeys( String locatortype, String locatorValue, String inputValue) {
		WebElement we1 =getwebElement(locatortype , locatorValue);
		if (we1.isDisplayed() == true) {
			System.out.println("webelement  is displayed");  
			test.log(Status.INFO, "webelement  is displayed");
			if (we1.isEnabled() == true) {
				Actions act= new Actions(driver);
				act.sendKeys(we1,inputValue).build().perform();
				System.out.println(" element is enabled");
				test.log(Status.INFO, "element is enabled");
			} else { 
				System.out.println("Txt Box is not enabled");
				test.log(Status.INFO, "Txt Box is not enabled");
			}
		} else {
			System.out.println("WEbelement is not displayed ");
			test.log(Status.INFO, "WEbelement is not displayed");
		}
	}
	
	
	public  void rightclick( String locatortype, String locatorValue) {
		WebElement we1 =getwebElement(locatortype , locatorValue);
		if (we1.isDisplayed() == true) {
			System.out.println("webelement  is displayed");  
			test.log(Status.INFO, "webelement  is displayed");
			if (we1.isEnabled() == true) {
				Actions act= new Actions(driver);
				act.contextClick(we1).build().perform();
				System.out.println(" element is enabled");
				test.log(Status.INFO, "element is enabled");
			} else { 
				System.out.println("Txt Box is not enabled");
				test.log(Status.INFO, "Txt Box is not enabled");
			}
		} else {
			System.out.println("WEbelement is not displayed ");
			test.log(Status.INFO, "WEbelement is not displayed");
	}
	}
	public  void selectByViisbleText( String locatortype,String locatorValue, String visibleTxt) {
		WebElement we1 =getwebElement(locatortype , locatorValue);
		if (we1.isDisplayed() == true) {
			System.out.println("webelement  is displayed");  
			test.log(Status.INFO, "webelement  is displayed");
			if (we1.isEnabled() == true) {
				Select sel= new Select(we1);
				sel.selectByVisibleText(visibleTxt);
				System.out.println(" element is enabled");
				test.log(Status.INFO, "element is enabled");
			} else { 
				System.out.println("Txt Box is not enabled");
				test.log(Status.INFO, "Txt Box is not enabled");
			}
		} else {
			System.out.println("WEbelement is not displayed ");
			test.log(Status.INFO, "WEbelement is not displayed");
		}
	}
	public  void selectByvalue( String locatortype,String locatorValue, String value) {
		WebElement we1 =getwebElement(locatortype , locatorValue);
		if (we1.isDisplayed() == true) {
			System.out.println("webelement  is displayed");  
			test.log(Status.INFO, "webelement  is displayed");
			if (we1.isEnabled() == true) {
				Select sel= new Select(we1);
				sel.selectByValue(value);
				System.out.println(" element is enabled");
				test.log(Status.INFO, "element is enabled");
			} else { 
				System.out.println("Txt Box is not enabled");
				test.log(Status.INFO, "Txt Box is not enabled");
			}
		} else {
			System.out.println("WEbelement is not displayed ");
			test.log(Status.INFO, "WEbelement is not displayed");
		}
}
	
	public  void selectByindex( String locatortype,String locatorValue, int index) {
		WebElement we1 =getwebElement(locatortype , locatorValue);
		if (we1.isDisplayed() == true) {
			System.out.println("webelement  is displayed");  
			test.log(Status.INFO, "webelement  is displayed");
			if (we1.isEnabled() == true) {
				Select sel= new Select(we1);
				sel.selectByIndex(index);
				System.out.println(" element is enabled");
				test.log(Status.INFO, "element is enabled");
			} else { 
				System.out.println("Txt Box is not enabled");
				test.log(Status.INFO, "Txt Box is not enabled");
			}
		} else {
			System.out.println("WEbelement is not displayed ");
			test.log(Status.INFO, "WEbelement is not displayed");
		}
		}
	public  String getInnerText( String locatortype,String locatorValue ) {
		String innertext=null;
		WebElement we =getwebElement(locatortype , locatorValue);
		if (we.isDisplayed() == true) {
			System.out.println("webelement  is displayed");  
			test.log(Status.INFO, "webelement  is displayed");
			if (we.isEnabled() == true) {
				innertext = we.getText();
				
				System.out.println(" element is enabled");
				test.log(Status.INFO, "element is enabled");
			} else { 
				System.out.println("Txt Box is not enabled");
				test.log(Status.INFO, "Txt Box is not enabled");
			}
		} else {
			System.out.println("WEbelement is not displayed ");
			test.log(Status.INFO, "WEbelement is not displayed");
		}
		
		return innertext;
		}
	public  String getAttributeValue( String locatortype,String locatorValue, String attributeValue) {
		String attributeValueText=null;
		WebElement we =getwebElement(locatortype , locatorValue);
		if (we.isDisplayed() == true) {
			System.out.println("webelement  is displayed");  
			test.log(Status.INFO, "webelement  is displayed");
			if (we.isEnabled() == true) {
				attributeValueText = we.getAttribute(attributeValue);
				
				System.out.println(" element is enabled");
				test.log(Status.INFO, "element is enabled");
			} else { 
				System.out.println("Txt Box is not enabled");
				test.log(Status.INFO, "Txt Box is not enabled");
			}
		} else {
			System.out.println("WEbelement is not displayed ");
			test.log(Status.INFO, "WEbelement is not displayed");
		}
		return attributeValueText; 
	
	
	}
    public  String getPageTitle(  ) {
		String gettitle=null;
		
				gettitle = driver.getTitle();
				
				System.out.println(" Title fetch successfully");
				test.log(Status.INFO, "Title fetch successfully");
			
		return gettitle;
}

   	public  void closeBrowser(  ) {
	     driver.close();                       
	             driver.quit();               
   	}                     
	public  void maximize(  ) {
	     driver.manage().window().maximize();                      
	                          
  	}   
	public  void minimize(  ) {
	     driver.manage().window().minimize();                      
	                          
 	}   
	public String getParentWindow() {
		String parentWindow= driver.getWindowHandle();
		return parentWindow;
		
		}
	
	public Set<String> switchToWindowByTitle(String title) {
		Set<String>  window=driver.getWindowHandles();
		for(String multipleWindow:window){
			String actualTitle = driver.getTitle();
			if(!actualTitle.equalsIgnoreCase(title)) {
			System.out.println("please Enter valid title");
			}
			driver.switchTo().window(multipleWindow);
		}
		return window;
	}
	
	
	public Set<String> switchToWindowByURL(String URL) {
		Set<String>  window=driver.getWindowHandles();
		for(String multipleWindow:window){
			String actualTitle = driver.getCurrentUrl();
			if(!actualTitle.equalsIgnoreCase(URL)) {
			System.out.println("please Enter valid title");
			}
			driver.switchTo().window(multipleWindow);
		}
		return window;
	}
	
	public void switchToParentWindow(String parentWindow) {
		driver.switchTo().window(parentWindow);
		
	}
	
	public String getCurrentURL() {
		String URL = driver.getCurrentUrl();
		return URL;
	}
	
	public void popupAccept(String expectedPopupText) {
		
		String actualText = popupGetText();
		if(actualText.contains(expectedPopupText)) {
		driver.switchTo().alert().accept();
		}else {
			System.out.println("Please enter The Valid Popup text");
		}
			
		}

	
public void popupDismiss(String expectedPopupText) {
		
		String actualText = popupGetText();
		if(actualText.contains(expectedPopupText)) {
		driver.switchTo().alert().dismiss();
		}else {
			System.out.println("Please enter The Valid Popup text");
		}
			
		}
	
	public String popupGetText() {
		String poptext = driver.switchTo().alert().getText();
		return poptext;
	}
	
	public void popupSendkeys(String inputvalue) {
		 driver.switchTo().alert().sendKeys(inputvalue);
		
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
   }